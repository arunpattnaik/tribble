#
# Virtual Hosts
#
# If you want to maintain multiple domains/hostnames on your
# machine you can setup VirtualHost containers for them. Most configurations
# use only name-based virtual hosts so the server doesn't need to worry about
# IP addresses. This is indicated by the asterisks in the directives below.
#
# Please see the documentation at 
# <URL:http://httpd.apache.org/docs/2.2/vhosts/>
# for further details before you try to setup virtual hosts.
#
# You may use the command line option '-S' to verify your virtual host
# configuration.

#
# Use name-based virtual hosting.
#
NameVirtualHost *:80

#
# VirtualHost example:
# Almost any Apache directive may go into a VirtualHost container.
# The first VirtualHost section is used for all requests that do not
# match a ServerName or ServerAlias in any <VirtualHost> block.
#
<VirtualHost *:80>
    ServerAdmin webmaster@localhost
    DocumentRoot "c:/wamp/www"
    ServerName localhost
</VirtualHost>

<VirtualHost *:80>
    ServerAdmin webmaster@tribble.local
    DocumentRoot "c:/wamp/www/tribble"
    ServerName tribble.local
    ErrorLog "C:/wamp/logs/tribble-error.log"
    CustomLog "C:/wamp/logs/tribble-access.log" common
    RewriteLog "C:/wamp/logs/tribble-rw.log"
    RewriteLogLevel 3
    
    <IfModule rewrite_module>
        RewriteEngine On

        #Removes access to the system folder by users.
        #Additionally this will allow you to create a System.php controller,
        #previously this would not have been possible.
        #'system' can be replaced if you have renamed your system folder.
        RewriteCond %{REQUEST_URI} ^system.*
        RewriteRule ^(.*)$ /index.php?$1 [L]
        
        #When your application folder isn't in the system folder
        #This snippet prevents user access to the application folder
        #Submitted by: Fabdrol
        #Rename 'application' to your applications folder name.
        RewriteCond %{REQUEST_URI} ^application.*
        RewriteRule ^(.*)$ /index.php?$1 [L]

        #Checks to see if the user is attempting to access a valid file,
        #such as an image or css document, if this isn't true it sends the
        #request to index.php
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteCond %{REQUEST_FILENAME} !-d
        RewriteCond %{REQUEST_URI} !^(/index\.php|/data|/assets|/robots\.txt|/favicon\.ico|/user_guide)
        RewriteRule ^(.*)$ /index.php?$1 [L]
    </IfModule>

    <IfModule !rewrite_module>
        # If we don't have mod_rewrite installed, all 404's
        # can be sent to index.php, and everything works as normal.
        # Submitted by: ElliotHaughin

        ErrorDocument 404 /colors.php
    </IfModule> 
</VirtualHost>


<VirtualHost *:80>
    ServerAdmin webmaster@tribble.local
    DocumentRoot "c:/wamp/www/tribble"
    ServerName api.tribble.local
    ErrorLog "C:/wamp/logs/api.tribble-error.log"
    CustomLog "C:/wamp/logs/api.tribble-access.log" common
    RewriteLog "C:/wamp/logs/api.tribble-rw.log"
    RewriteLogLevel 3
    
    DirectoryIndex api.php
    
    <IfModule rewrite_module>
        RewriteEngine On

        #Removes access to the system folder by users.
        #Additionally this will allow you to create a System.php controller,
        #previously this would not have been possible.
        #'system' can be replaced if you have renamed your system folder.
        RewriteCond %{REQUEST_URI} ^system.*
        RewriteRule ^(.*)$ /api.php?/$1 [L]
        
        #When your application folder isn't in the system folder
        #This snippet prevents user access to the application folder
        #Submitted by: Fabdrol
        #Rename 'application' to your applications folder name.
        RewriteCond %{REQUEST_URI} ^application.*
        RewriteRule ^(.*)$ /api.php?/$1 [L]

        #Checks to see if the user is attempting to access a valid file,
        #such as an image or css document, if this isn't true it sends the
        #request to index.php
        RewriteCond %{REQUEST_FILENAME} !-f<
        RewriteCond %{REQUEST_FILENAME} !-d
        RewriteCond %{REQUEST_URI} !^(/api\.php|/assets|/robots\.txt|/favicon\.ico)
        RewriteRule ^(.*)$ /api.php?/$1 [L]
    </IfModule>

    <IfModule !rewrite_module>
        # If we don't have mod_rewrite installed, all 404's
        # can be sent to index.php, and everything works as normal.
        # Submitted by: ElliotHaughin

        ErrorDocument 404 /colors.php
    </IfModule> 
</VirtualHost>




